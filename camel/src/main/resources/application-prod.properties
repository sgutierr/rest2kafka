quarkus.native.resources.includes=camel/kafka2rest.camel.yaml
quarkus.devservices.enabled=false
quarkus.infinispan-client.devservices.enabled=false

########### Camel properties ##################

camel.main.routes-include-pattern=camel/kafka2rest.camel.yaml

# Netty-HTTP port
camel.restConfiguration.port=9090

# Enabling health
camel.main.jmxEnabled=true

# Infinispan
camel.component.infinispan.username=operator
camel.component.infinispan.password=NNQBRPdRVqLISrSO
camel.component.infinispan.secure=false
camel.component.infinispan.hosts=example-infinispan.appdev-streams.svc.cluster.local:11222
camel.component.infinispan.saslMechanism=SCRAM-SHA-512

# Kafka
camel.component.kafka.brokers=my-cluster-kafka-bootstrap.appdev-streams.svc.cluster.local:9092
camel.component.kafka.sslTruststoreLocation=""
camel.component.kafka.saslJaasConfig=org.apache.kafka.common.security.scram.ScramLoginModule required username="console-kafka-user1" password="HIwTHyi6v9ztWGJShad7sGGgH1OkQTqn";
camel.component.kafka.saslMechanism=SCRAM-SHA-512
camel.component.kafka.securityProtocol=SASL_PLAINTEXT
camel.component.kafka.sslTruststorePassword=""

######## OpenShift Deployment #################

quarkus.kubernetes.deployment-target=openshift
# If you are using an untrusted certificate for openshift API
quarkus.kubernetes-client.trust-certs=true
quarkus.kubernetes.deploy=true 

# Netty-HTTP container port
quarkus.openshift.ports.netty.container-port=9090
# Create the OpenShift route based on the Netty-http target port
quarkus.openshift.route.target-port=netty

# Jolokia port
quarkus.openshift.ports.jolokia.container-port=8778

quarkus.infinispan-client.devservices.port=11222
quarkus.kubernetes-config.secrets.enabled=true
quarkus.container-image.group=appdev-streams
quarkus.container-image.tag=1
quarkus.container-image.builder=openshift
quarkus.openshift.deployment-kind=Deployment
quarkus.openshift.add-version-to-label-selectors=false
quarkus.openshift.route.expose=true
quarkus.openshift.replicas=1
quarkus.openshift.build-strategy=docker


# Observability
#quarkus.otel.exporter.otlp.traces.endpoint: http://jaeger-es-collector.poc-monitoring.svc:4317
#quarkus.application.name=http2kafka